[{"/Users/taehong/Downloads/JavaScript/tc4-Taehong0445964/src/index.js":"1","/Users/taehong/Downloads/JavaScript/tc4-Taehong0445964/src/App.js":"2"},{"size":2117,"mtime":1649435963721,"results":"3","hashOfConfig":"4"},{"size":261,"mtime":1649432506504,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9"},"1q2ceqn",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/Users/taehong/Downloads/JavaScript/tc4-Taehong0445964/src/index.js",["14"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// source: https://stackoverflow.com/questions/60289140/react-click-counter-updating-state-of-just-one-element\n class Veggie extends React.Component {\n  state = {\n    count: 0\n  };\n\n  handleClick = () => {\n    // Use updater function when new state is derived from old\n    this.setState(prev => ({ count: prev.count + 1 }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <img src={this.props.value}/>\n        </div>\n        <div>\n          <button className=\"veggie\" onClick={this.handleClick}>Like</button> \n        </div>\n        <div>\n          <p className=\"counter\">{this.state.count} likes.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class Grid extends React.Component {\n  renderVeggie(i) {\n    return (\n      <Veggie value={i} />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div>\n          <p>Parsnip</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/parsnip-isolated-on-the-white-background-close-up-picture-id884855382?s=612x612')}\n        </div> \n        <div>\n          <p>Carrot</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/fresh-carrots-picture-id133483506?s=612x612')}\n        </div>\n        <div>\n          <p>Potato</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/potatoes-picture-id879133438?s=612x612')}\n        </div>\n        <div>\n          <p>Squash</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/butternut-squash-picture-id505198157?s=612x612')}\n        </div>\n        <div>\n          <p>Pumpkin</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/pumpkin-picture-id184279619?s=612x612')}\n        </div>\n        <div>\n          <p>Peas</p>\n          {this.renderVeggie('https://media.istockphoto.com/photos/green-peas-closeup-picture-id628151946?s=612x612')}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","/Users/taehong/Downloads/JavaScript/tc4-Taehong0445964/src/App.js",[],[],["15","16"],{"ruleId":"17","severity":1,"message":"18","line":20,"column":11,"nodeType":"19","endLine":20,"endColumn":40},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["24"],"no-negated-in-lhs",["25"],"no-global-assign","no-unsafe-negation"]